<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>edu.neu.ccs.prl.zeugma</groupId>
        <artifactId>zeugma-evaluation</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>
    <artifactId>zeugma-evaluation-tools</artifactId>
    <packaging>pom</packaging>
    <modules>
        <module>zeugma-evaluation-tools-BeDivFuzz</module>
        <module>zeugma-evaluation-tools-RLCheck</module>
        <module>zeugma-evaluation-tools-EI</module>
    </modules>
    <properties>
        <!-- Default values to prevent Maven from crashing when profiles are not activated -->
        <meringue.logMutation></meringue.logMutation>
        <meringue.debug></meringue.debug>
        <meringue.otherArgs></meringue.otherArgs>
    </properties>
    <dependencies>
        <dependency>
            <groupId>edu.neu.ccs.prl.zeugma</groupId>
            <artifactId>zeugma-evaluation-subjects</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>edu.berkeley.cs.jqf</groupId>
                    <artifactId>jqf-fuzz</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>edu.neu.ccs.prl.meringue</groupId>
                    <artifactId>meringue-maven-plugin</artifactId>
                    <dependencies>
                        <dependency>
                            <groupId>edu.neu.ccs.prl.zeugma</groupId>
                            <artifactId>zeugma-meringue-extension</artifactId>
                            <version>1.0.0-SNAPSHOT</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <jacocoFormats>CSV</jacocoFormats>
                        <javaOptions>
                            <option>-Xmx8G</option>
                            <option>-ea</option>
                            <option>-DuseFastNonCollidingCoverageInstrumentation=true</option>
                            <option>-Djqf.ei.MAX_INPUT_SIZE=10240</option>
                            <option>
                                -Djanala.conf=${project.basedir}/janala.conf
                            </option>
                            <option>
                                -Drl.guidance.USE_GREYBOX=true
                            </option>
                            <option>-Dzeugma.maxInputSize=10240</option>
                            <option>
                                -Dzeugma.exclusions=org/mozilla/javascript/gen,jdk/nashorn/internal/scripts/Script$
                            </option>
                        </javaOptions>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-cli</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>11</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <executions>
                    <execution>
                        <inherited>false</inherited>
                        <id>install-RLCheck-instrument</id>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <file>
                                ${project.basedir}/RLCheck/jqf-instrument-1.2-SNAPSHOT.jar
                            </file>
                            <pomFile>
                                ${project.basedir}/RLCheck/jqf-instrument-pom.xml
                            </pomFile>
                        </configuration>
                    </execution>
                    <execution>
                        <inherited>false</inherited>
                        <id>install-RLCheck-fuzz</id>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <file>
                                ${project.basedir}/RLCheck/jqf-fuzz-1.2-SNAPSHOT.jar
                            </file>
                            <pomFile>
                                ${project.basedir}/RLCheck/jqf-fuzz-pom.xml
                            </pomFile>
                        </configuration>
                    </execution>
                    <execution>
                        <inherited>false</inherited>
                        <id>install-RLCheck-examples</id>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <file>
                                ${project.basedir}/RLCheck/jqf-examples-1.2-SNAPSHOT.jar
                            </file>
                            <pomFile>
                                ${project.basedir}/RLCheck/jqf-examples-pom.xml
                            </pomFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>build-argLine</id>
            <activation>
                <property>
                    <name>!skipArgLineMerge</name>
                </property>
            </activation>
            <properties>
                <meringue.argLine>${meringue.logMutation} ${meringue.debug} ${meringue.otherArgs}</meringue.argLine>
            </properties>
        </profile>
        <profile>
            <id>bedivfuzz-structure</id>
            <properties>
                <!--suppress UnresolvedMavenProperty -->
                <meringue.otherArgs>
                    -Djqf.ei.SAVE_ONLY_VALID=true -Djqf.div.SAVE_ONLY_NEW_STRUCTURES=true
                    -Dreplay.directory=${meringue.outputDirectory}
                </meringue.otherArgs>
                <meringue.framework>de.hub.se.jqf.fuzz.BeDivFuzzFramework</meringue.framework>
                <meringue.testMethod>testWithSplitGenerator</meringue.testMethod>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>edu.berkeley.cs.jqf</groupId>
                    <artifactId>jqf-examples</artifactId>
                    <version>2.0-bedivfuzz</version>
                    <classifier>tests</classifier>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>edu.neu.ccs.prl.meringue</groupId>
                        <artifactId>meringue-maven-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>edu.neu.ccs.prl.zeugma</groupId>
                                <artifactId>zeugma-evaluation-tools-BeDivFuzz</artifactId>
                                <version>1.0.0-SNAPSHOT</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>bedivfuzz-simple</id>
            <properties>
                <!--suppress UnresolvedMavenProperty -->
                <meringue.otherArgs>
                    -Djqf.ei.SAVE_ONLY_VALID=true -Dreplay.directory=${meringue.outputDirectory}</meringue.otherArgs>
                <meringue.framework>de.hub.se.jqf.fuzz.BeDivFuzzFramework</meringue.framework>
                <meringue.testMethod>testWithSplitGenerator</meringue.testMethod>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>edu.berkeley.cs.jqf</groupId>
                    <artifactId>jqf-examples</artifactId>
                    <version>2.0-bedivfuzz</version>
                    <classifier>tests</classifier>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>edu.neu.ccs.prl.meringue</groupId>
                        <artifactId>meringue-maven-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>edu.neu.ccs.prl.zeugma</groupId>
                                <artifactId>zeugma-evaluation-tools-BeDivFuzz</artifactId>
                                <version>1.0.0-SNAPSHOT</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>rlcheck</id>
            <properties>
                <meringue.framework>edu.berkeley.cs.jqf.fuzz.rl.RLCheckFramework</meringue.framework>
                <meringue.testMethod>testWithInputStream</meringue.testMethod>
            </properties>
            <dependencies>
                <!--Override version of junit-quickcheck-->
                <dependency>
                    <groupId>com.pholser</groupId>
                    <artifactId>junit-quickcheck-core</artifactId>
                    <version>0.8</version>
                </dependency>
                <dependency>
                    <groupId>com.pholser</groupId>
                    <artifactId>junit-quickcheck-generators</artifactId>
                    <version>0.8</version>
                </dependency>
                <dependency>
                    <groupId>edu.berkeley.cs.jqf</groupId>
                    <artifactId>jqf-examples</artifactId>
                    <version>1.2-SNAPSHOT-RLCheck</version>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>edu.neu.ccs.prl.meringue</groupId>
                        <artifactId>meringue-maven-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>edu.neu.ccs.prl.zeugma</groupId>
                                <artifactId>zeugma-evaluation-tools-RLCheck</artifactId>
                                <version>1.0.0-SNAPSHOT</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <frameworkArguments>
                                <configuration>${project.basedir}/RLCheck/${subject}.json</configuration>
                                <generator>
                                    edu.berkeley.cs.jqf.examples.${gen.type}RLGenerator
                                </generator>
                            </frameworkArguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>ei</id>
            <properties>
                <!--suppress UnresolvedMavenProperty -->
                <meringue.framework>edu.neu.ccs.prl.zeugma.EIFramework</meringue.framework>
                <meringue.testMethod>testWithGenerator</meringue.testMethod>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>edu.neu.ccs.prl.meringue</groupId>
                        <artifactId>meringue-maven-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>edu.neu.ccs.prl.zeugma</groupId>
                                <artifactId>zeugma-evaluation-tools-EI</artifactId>
                                <version>1.0.0-SNAPSHOT</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>zest</id>
            <properties>
                <meringue.framework>edu.neu.ccs.prl.zeugma.ZestFramework</meringue.framework>
                <meringue.testMethod>testWithGenerator</meringue.testMethod>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>edu.neu.ccs.prl.meringue</groupId>
                        <artifactId>meringue-maven-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>edu.neu.ccs.prl.zeugma</groupId>
                                <artifactId>zeugma-evaluation-tools-EI</artifactId>
                                <version>1.0.0-SNAPSHOT</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>log-mutation</id>
            <properties>
                <meringue.logMutation>
                    -Djqf.ei.OBSERVE_MUTATION_DISTANCE=true
                </meringue.logMutation>
            </properties>
        </profile>
        <profile>
            <id>debug</id>
            <properties>
                <meringue.otherArgs>
                    -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:5005
                </meringue.otherArgs>
            </properties>
        </profile>
        <profile>
            <id>zeugma-none</id>
            <properties>
                <meringue.framework>edu.neu.ccs.prl.zeugma.framework.ZeugmaFramework</meringue.framework>
                <meringue.testMethod>testWithGenerator</meringue.testMethod>
                <meringue.otherArgs>
                    -Dzeugma.crossover=none
                </meringue.otherArgs>
            </properties>
        </profile>
        <profile>
            <id>zeugma-linked</id>
            <properties>
                <meringue.framework>edu.neu.ccs.prl.zeugma.framework.ZeugmaFramework</meringue.framework>
                <meringue.testMethod>testWithGenerator</meringue.testMethod>
                <meringue.otherArgs>-Dzeugma.crossover=linked</meringue.otherArgs>
            </properties>
        </profile>
        <profile>
            <id>zeugma-one_point</id>
            <properties>
                <meringue.framework>edu.neu.ccs.prl.zeugma.framework.ZeugmaFramework</meringue.framework>
                <meringue.testMethod>testWithGenerator</meringue.testMethod>
                <meringue.otherArgs>-Dzeugma.crossover=one_point</meringue.otherArgs>
            </properties>
        </profile>
        <profile>
            <id>zeugma-two_point</id>
            <properties>
                <meringue.framework>edu.neu.ccs.prl.zeugma.framework.ZeugmaFramework</meringue.framework>
                <meringue.testMethod>testWithGenerator</meringue.testMethod>
                <meringue.otherArgs>-Dzeugma.crossover=two_point</meringue.otherArgs>
            </properties>
        </profile>
        <profile>
            <id>ant</id>
            <properties>
                <subject>ant</subject>
                <gen.type>xml.Xml</gen.type>
                <meringue.testClass>edu.neu.ccs.prl.zeugma.eval.FuzzAnt</meringue.testClass>
                <meringue.includedArtifacts>org.apache.ant:*</meringue.includedArtifacts>
            </properties>
        </profile>
        <profile>
            <id>bcel</id>
            <properties>
                <subject>bcel</subject>
                <gen.type>java</gen.type>
                <meringue.testClass>edu.neu.ccs.prl.zeugma.eval.FuzzBcel</meringue.testClass>
                <meringue.includedArtifacts>org.apache.bcel:bcel</meringue.includedArtifacts>
            </properties>
        </profile>
        <profile>
            <id>closure</id>
            <properties>
                <subject>closure</subject>
                <gen.type>js.JavaScript</gen.type>
                <meringue.testClass>edu.neu.ccs.prl.zeugma.eval.FuzzClosure</meringue.testClass>
                <meringue.includedArtifacts>com.google.javascript:*</meringue.includedArtifacts>
            </properties>
        </profile>
        <profile>
            <id>maven</id>
            <properties>
                <subject>maven</subject>
                <gen.type>xml.Xml</gen.type>
                <meringue.testClass>edu.neu.ccs.prl.zeugma.eval.FuzzMaven</meringue.testClass>
                <meringue.includedArtifacts>org.apache.maven:*,org.codehaus.plexus:*</meringue.includedArtifacts>
            </properties>
        </profile>
        <profile>
            <id>nashorn</id>
            <properties>
                <subject>nashorn</subject>
                <gen.type>js.JavaScript</gen.type>
                <meringue.testClass>edu.neu.ccs.prl.zeugma.eval.FuzzNashorn</meringue.testClass>
                <meringue.inclusions>jdk/nashorn/*</meringue.inclusions>
                <meringue.includeJavaClassLibrary>true</meringue.includeJavaClassLibrary>
                <meringue.includedArtifacts>ignored</meringue.includedArtifacts>
            </properties>
        </profile>
        <profile>
            <id>rhino</id>
            <properties>
                <subject>rhino</subject>
                <gen.type>js.JavaScript</gen.type>
                <meringue.testClass>edu.neu.ccs.prl.zeugma.eval.FuzzRhino</meringue.testClass>
                <meringue.includedArtifacts>org.mozilla:rhino</meringue.includedArtifacts>
            </properties>
        </profile>
        <profile>
            <id>chocopy</id>
            <properties>
                <subject>chocopy</subject>
                <gen.type>py.Python</gen.type>
                <meringue.testClass>edu.neu.ccs.prl.zeugma.eval.FuzzChocopy</meringue.testClass>
                <meringue.includedArtifacts>ignored</meringue.includedArtifacts>
            </properties>
        </profile>
        <profile>
            <id>jython</id>
            <properties>
                <subject>jython</subject>
                <gen.type>py.Python</gen.type>
                <meringue.testClass>edu.neu.ccs.prl.zeugma.eval.</meringue.testClass>
                <meringue.includedArtifacts>ignored</meringue.includedArtifacts>
            </properties>
        </profile>
        <profile>
            <id>gson</id>
            <properties>
                <subject>gson</subject>
                <gen.type>json.JSON</gen.type>
                <meringue.testClass>edu.neu.ccs.prl.zeugma.eval.FuzzGson</meringue.testClass>
                <meringue.includedArtifacts>ignored</meringue.includedArtifacts>
            </properties>
        </profile>
        <profile>
            <id>jackson</id>
            <properties>
                <subject>jackson</subject>
                <gen.type>json.JSON</gen.type>
                <meringue.testClass>edu.neu.ccs.prl.zeugma.eval.FuzzJackson</meringue.testClass>
                <meringue.includedArtifacts>ignored</meringue.includedArtifacts>
            </properties>
        </profile>
        <profile>
            <id>tomcat</id>
            <properties>
                <subject>tomcat</subject>
                <gen.type>xml.Xml</gen.type>
                <meringue.testClass>edu.neu.ccs.prl.zeugma.eval.FuzzTomcat</meringue.testClass>
                <meringue.includedArtifacts>org.apache.tomcat:*</meringue.includedArtifacts>
            </properties>
        </profile>
    </profiles>
</project>